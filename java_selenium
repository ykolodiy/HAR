package mypackage.FFFFFFFFFFFFFFFFFFF;

import java.io.File;
import java.io.IOException;

import org.openqa.selenium.Proxy;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import net.lightbody.bmp.BrowserMobProxy;
import net.lightbody.bmp.BrowserMobProxyServer;
import net.lightbody.bmp.client.ClientUtil;
import net.lightbody.bmp.core.har.Har;
import net.lightbody.bmp.core.har.HarEntry;
import net.lightbody.bmp.proxy.CaptureType;

/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args ) throws Exception
    {
        System.out.println( "Hello World!" );
        System.setProperty("webdriver.chrome.driver", "C:\\Users\\ykolodiy\\Downloads\\chromedriver_win_76\\chromedriver.exe");
        
        /*
      	WebDriver driver = new ChromeDriver();
          driver.manage().window().maximize();
          driver.get("http://www.google.com");
          driver.close();
          */
          
        
        System.out.println( "Hello World!" );
        BrowserMobProxy proxy = new BrowserMobProxyServer();
        proxy.start(); // can specify a port here if you like
        // get the selenium proxy object
        Proxy seleniumProxy = ClientUtil.createSeleniumProxy(proxy);
          
        ChromeOptions options = new ChromeOptions();
        // Add the WebDriver proxy capability.
         options.setCapability("proxy", seleniumProxy);
         WebDriver driver = new ChromeDriver(options);
         
         
         // enable more detailed HAR capture, if desired (see CaptureType for the complete list)
         proxy.enableHarCaptureTypes(CaptureType.REQUEST_CONTENT, CaptureType.RESPONSE_CONTENT);

         // create a new HAR with the label "yahoo.com"
         proxy.newHar("yahoo.com");

         // open yahoo.com
         driver.get("http://www.google.com");

         // get the HAR data
         Har har = proxy.getHar();  
         Thread.sleep(8000);
         
         java.io.StringWriter writer = new java.io.StringWriter();
         try {
                     har.writeTo(writer);
                 } catch (IOException e) {
                     e.printStackTrace();
                 }

         String harAsString = writer.toString();
         System.out.println(harAsString);
    
          
                 JsonParser parser = new JsonParser();
         
         
         JsonElement harAsJson = parser.parse(writer.toString());
        
         
         
         JsonObject rootObject = harAsJson.getAsJsonObject();
         
      String pageName = rootObject.getAsJsonObject("log").getAsJsonArray("entries").get(1).toString();
         JsonObject one = (JsonObject) rootObject.getAsJsonObject("log").getAsJsonArray("entries").get(1);
       JsonObject two = (JsonObject) one.getAsJsonObject("response");
       JsonObject three = (JsonObject) two.getAsJsonObject("content");
       
      
		String x = "{\n   \"date\": \"09-13-2019\",\n   \"milliseconds_since_epoch\": 1568403755707,\n   \"time\": \"07:42:35 PM\"\n}\n";
         
       
       JsonObject convertedObject = new Gson().fromJson(three.get("text").getAsString(), JsonObject.class);
       
       
         System.out.println(rootObject.toString());
         
         System.out.println(pageName);
         
         System.out.println( one.get("response").toString());
         System.out.println(three);
         System.out.println(three.get("text").getAsString());
         System.out.println(x);
         
         System.out.println(convertedObject.isJsonObject());
 		
 		System.out.println(convertedObject.get("date"));
          
          
    }
}
